services:
  timescaledb-common:
    build: ./monitoring/.
    ports:
      - '${TIMESCALE_PORT}:5432'
    environment:
      - POSTGRES_USER=${TIMESCALE_USER}
      - POSTGRES_PASSWORD=${TIMESCALE_PASSWORD}
      - POSTGRES_DB=${TIMESCALE_DATABASE}

  postgres-common:
    image: postgres:17.5
    environment:
      POSTGRES_USER: ${DB__USER}
      POSTGRES_PASSWORD: ${DB__PASSWORD}
      POSTGRES_DB: ${DB__NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB__USER} -d ${DB__NAME}" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    command: -c 'max_connections=10000'

  haproxy-common:
    image: haproxy:3.1.3-alpine
    ports:
      - 5000:5000
      - 5001:5001
      - 7000:7000
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64m

  migration-common:
    build:
      context: ../.
      dockerfile: devops/social_network/Dockerfile
    command: python -m alembic -c social_network/infrastructure/database/migrations/alembic.ini upgrade head
    restart: on-failure

  bootstrap-common:
    build:
      context: ../.
      dockerfile: devops/social_network/Dockerfile
    command: python -m bootstrap.main
    restart: on-failure

  social-network-common:
    build:
      context: ../.
      dockerfile: devops/social_network/Dockerfile
    command: python -m social_network.main
    ports:
      - "${SERVER__BIND_PORT}:${SERVER__BIND_PORT}"

  prometheus-common:
    image: prom/prometheus:v3.6.0
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    restart: unless-stopped

  grafana-common:
    image: grafana/grafana:12.1.0
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - PG_PASSWORD=${TIMESCALE_PASSWORD}
      - PG_USER=${TIMESCALE_USER}
      - PG_DB=${TIMESCALE_DATABASE}

  postgresql-exporter-common:
    image: prometheuscommunity/postgres-exporter:v0.18.0
    command: [ "--collector.postmaster", "--collector.stat_wal_receiver", "--collector.database_wraparound", "--collector.long_running_transactions", "--collector.process_idle", "--collector.stat_activity_autovacuum", "--collector.stat_statements", "--collector.statio_user_indexes", "--collector.xlog_location" ]
    restart: unless-stopped

  redis-exporter-common:
    image: oliver006/redis_exporter:v1.77.0
    ports:
      - "9121:9121"
    command: --redis.addr redis:${REDIS__PORT}
    environment:
      REDIS__PORT: ${REDIS__PORT}
    restart: unless-stopped

  etcd-common:
    image: quay.io/coreos/etcd:v3.5.18
    entrypoint: /usr/local/bin/etcd
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512m

  patroni-common:
    image: ghcr.io/batonogov/patroni-docker:v4.0.4-pg17.3
    entrypoint: [/bin/sh, /entrypoint.sh]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512m
