services:
  timescaledb:
    extends:
      file: ../common-services.yml
      service: timescaledb-common
    volumes:
      - timescaledb-data-no-sharding:/var/lib/postgresql/data
    networks:
      - no-sharding-network

  postgres:
    extends:
      file: ../common-services.yml
      service: postgres-common
    volumes:
      - no-sharding-pg-data:/var/lib/postgresql/data
    networks:
      - no-sharding-network

  postgresql-exporter:
    extends:
      file: ../common-services.yml
      service: postgresql-exporter-common
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB__USER}:${DB__PASSWORD}@postgres:5432/${DB__NAME}?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - no-sharding-network

  migration:
    build:
      context: ../..
      dockerfile: devops/social_network/Dockerfile
    command: python -m alembic -c social_network/infrastructure/database/migrations/alembic.ini upgrade head
    environment:
      DB__HOST: postgres
      DB__PORT: 5432
      DB__USER: ${DB__USER}
      DB__PASSWORD: ${DB__PASSWORD}
      DB__NAME: ${DB__NAME}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - no-sharding-network

  bootstrap:
    extends:
      file: ../common-services.yml
      service: bootstrap-common
    environment:
      DB__HOST: postgres
      DB__PORT: 5432
      DB__USER: ${DB__USER}
      DB__PASSWORD: ${DB__PASSWORD}
      DB__NAME: ${DB__NAME}
      MY_PASSWORD: ${MY_PASSWORD}
      MY_UUID: ${MY_UUID}
      AUTH__SECRET: ${AUTH__SECRET}
      AUTH__ALGORITHM: "HS256"
      AUTH__TOKEN_TTL_SECONDS: "604800"
    depends_on:
      migration:
        condition: service_completed_successfully
    networks:
      - no-sharding-network

  social-network:
    build:
      context: ../..
      dockerfile: devops/social_network/Dockerfile
    command: python -m social_network.main
    ports:
      - "${SERVER__BIND_PORT}:${SERVER__BIND_PORT}"
    environment:
      LEVEL: "INFO"
      SERVER__BIND_PORT: ${SERVER__BIND_PORT}
      SERVER__BIND_HOST: "0.0.0.0"
      SERVER__WORKERS: "1"
      DB__TYPENAME: "postgresql+asyncpg"
      DB__HOST: postgres
      DB__PORT: 5432
      DB__USER: ${DB__USER}
      DB__PASSWORD: ${DB__PASSWORD}
      DB__NAME: ${DB__NAME}
      DB__POOL_SIZE: "1"
      AUTH__SECRET: ${AUTH__SECRET}
      AUTH__ALGORITHM: "HS256"
      AUTH__TOKEN_TTL_SECONDS: "604800"
      SENTRY__DSN: ${SENTRY_DSN:-}
      REDIS__HOST: "redis"
      REDIS__PORT: ${REDIS__PORT}
    depends_on:
      postgres:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    networks:
      - no-sharding-network

  prometheus:
    extends:
      file: ../common-services.yml
      service: prometheus-common
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-no-sharding:/prometheus
    networks:
      - no-sharding-network

  grafana:
    extends:
      file: ../common-services.yml
      service: grafana-common
    volumes:
      - grafana-no-sharding:/var/lib/grafana
      - ../monitoring/grafana-provisioning/:/etc/grafana/provisioning
    networks:
      - no-sharding-network

volumes:
  no-sharding-pg-data:
  timescaledb-data-no-sharding:
  prometheus-no-sharding:
  grafana-no-sharding:

networks:
  no-sharding-network:
    driver: bridge
